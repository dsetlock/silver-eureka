# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - main
#Start workflow jobs
jobs:
  build: #Creates initial tar ball
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create tarball
        run: tar -cvf app.tar.gz .

  signerOne: #first signer
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: post-production
    steps:
#     - name: Login to Azure
#       run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Replace with the version of Python you want to use
      - name: Run Python script
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID_1 }} -p ${{ secrets.AZURE_CLIENT_SECRET_1 }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          python myscript.py

  signerTwo:
    needs: signerOne
    runs-on: ubuntu-latest
    environment:
      name: post-production
    steps:
#     - name: Login to Azure
#       run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID_2 }} -p ${{ secrets.AZURE_CLIENT_SECRET_2 }} --tenant ${{ secrets.AZURE_TENANT_ID }}
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Replace with the version of Python you want to use
      - name: Run Python script
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          python myscript.py

  deploy:
    needs: signerTwo
    runs-on: ubuntu-latest
    environment:
      name: post-production
    steps:
      - name: Login to Azure
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
      - name: Upload tarball to storage account
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az storage blob upload --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} --account-key ${{ secrets.AZURE_STORAGE_KEY }} --container-name ${{ secrets.AZURE_STORAGE_CONTAINER }} --file "${{ github.repository }}.tar.gz" --name "${{ github.repository }}.tar.gz"
#Kick off workflow in post-production environment

##Signer01 env set

##Signer02 env set



#Set first environment approver

#Set second environment approver

#make TAR ball?

#Execute python tool for signing


##Copy to storage account

